# Сервер (обрабатывает поступающие запросы от клиента)
import socket # подключаем модуль для взаимодействия по сети

HOST = '127.0.0.1' # IP-адрес для клиент-серверного обмена на одном ПК
PORT = 50007 # порт идентифицирует программу-сервер на данном ПК

# создается программный сокет с гарантированной (SOCK_STREAM)
# доставкой данных (протокол TCP):
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
# сокет привязывается (bind) к IP-адресу и сетевому порту для того,
# чтобы обрабатывать поступающие запросы:
s.bind((HOST, PORT))
# сервер слушает (listen), ожидает входные соединения от клиента:
s.listen(1)
# в момент, когда от клиента поступил запрос на соединение, вызывается
# метод accept, который приводит к созданию нового сокета
#(записывается в переменную conn). Данную операцию можно сравнить с
# поступлением телефонного звонка на коммутатор (listen), который
# перенаправляет звонок к конкретному оператору (accept) и снова
# переходит в режим ожидания:
conn, addr = s.accept() # в переменной addr IP-адрес клиента
print('Connected client')
while 1:
    data = conn.recv(1024) # получение данных от клиента, 1024 байт
    if not data:
        break
    else:
        print('Received[2]: ', data)
    conn.send(data) # отправка данных клиенту
    print('Send[3]: ', data)
conn.close() # закрытие соединения